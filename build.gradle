ext {
    compileSdkVersion = 28
    targetSdkVersion = 28
    minSdkVersion = 21
    versionCode = 1
    versionName = "1.0"
    applicationId = "app.droidster"

    versions = [
            ktx               : "1.0.2",

            appCompat         : "1.0.2",
            material          : "1.0.0",
            recyclerview      : "1.0.0",
            constraintLayout  : "1.1.3",
            lifecycle         : "2.0.0",
            lottie            : "2.8.0",

            dagger            : "2.23.1",
            okhttp            : "3.14.2",
            loggingInterceptor: "3.11.0",
            rxjava            : "2.2.9",
            retrofit          : "2.6.0",
            timber            : "4.7.1",
            gson              : "2.8.5",
            findbugs          : "3.0.2",
            
            jUnitJupiter      : "5.4.2",
            mockitoKotlin     : "2.1.0",
            mockitoInline     : "2.13.0",
            assertJ           : "3.12.2"
    ]

    dependencies = [
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}",
            ktx               : "androidx.core:core-ktx:${versions.ktx}",

            appCompat         : "androidx.appcompat:appcompat:${versions.appCompat}",
            material          : "com.google.android.material:material:${versions.material}",
            recyclerView      : "androidx.recyclerview:recyclerview:${versions.recyclerview}",
            constraintLayout  : "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}",
            viewmodel         : "androidx.lifecycle:lifecycle-viewmodel:${versions.lifecycle}",
            common            : "androidx.lifecycle:lifecycle-common:${versions.lifecycle}",
            extensions        : "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}",
            lottie            : "com.airbnb.android:lottie:${versions.lottie}",

            dagger            : "com.google.dagger:dagger:${versions.dagger}",
            daggerCompiler    : "com.google.dagger:dagger-compiler:${versions.dagger}",
            okhttp            : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
            loggingInterceptor: "com.squareup.okhttp3:logging-interceptor:${versions.loggingInterceptor}",
            rxjava            : "io.reactivex.rxjava2:rxjava:${versions.rxjava}",
            retrofit          : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
            retrofitGson      : "com.squareup.retrofit2:converter-gson:${versions.retrofit}",
            retrofitRx        : "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}",
            timber            : "com.jakewharton.timber:timber:${versions.timber}",
            gson              : "com.google.code.gson:gson:${versions.gson}",
            findbugs          : "com.google.code.findbugs:jsr305:${versions.findbugs}",

            jUnitJupiter      : "org.junit.jupiter:junit-jupiter-api:${versions.jUnitJupiter}",
            mockitoKotlin     : "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockitoKotlin}",
            mockitoInline     : "org.mockito:mockito-inline:2.13.0",
            assertJ           : "org.assertj:assertj-core:${versions.assertJ}"
    ]

    modules = [
            base    : ":base",
            app     : ":app",
            feature : ":feature",
            testCore: ":test-core"
    ]
}

buildscript {
    ext.kotlin_version = '1.3.41'
    ext.agpVersion = '3.5.0'

    repositories {
        google()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$agpVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:8.2.0"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def config = rootProject.extensions.getByName("ext")

subprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint" // Version should be inherited from parent
    ktlint {
        version = "0.34.2"
        debug = true
        android = true
    }

    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            android {
                compileSdkVersion config.compileSdkVersion

                defaultConfig {
                    minSdkVersion config.minSdkVersion
                    targetSdkVersion config.compileSdkVersion
                    versionCode config.versionCode
                    versionName config.versionName
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                    javaCompileOptions {
                        annotationProcessorOptions {
                            arguments = [
                                    "dagger.gradle.incremental": "true"
                            ]
                        }
                    }
                }
                buildTypes {
                    release {
                        minifyEnabled false
                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    }
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }
            }
        }
    }
}
